LSOAs <- read_excel("/Users/lucy/Desktop/LSHTM/Summer Project/datasets/LSOApop2020.xlsx",sheet=4,skip=4)
# from: https://www.ons.gov.uk/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/lowersuperoutputareamidyearpopulationestimates

rural <- read_excel("/Users/lucy/Desktop/LSHTM/Summer Project/datasets/Rural_Urban_Classification_2011_lookup_tables_for_small_area_geographies.xlsx",sheet=3,skip=2)
#from https://www.gov.uk/government/statistics/2011-rural-urban-classification-lookup-tables-for-all-geographies

# data cleaning: removing Wales
vec <- c()
for(i in 1:nrow(LSOAs)){
  if(substr(LSOAs$`LSOA Code`[i],1,1)=='W'){
    vec <- c(vec,i)
  }
}
LSOAs <- LSOAs[-vec,]
vec2 <- c()
for(i in 1:nrow(rural)){
  if(substr(rural$`Lower Super Output Area 2011 Code`[i],1,1)=='W'){
    vec2 <- c(vec2,i)
  }
}
rural <- rural[-vec2,]

LSOAs$rural <- rep.int(NA,nrow(LSOAs))
for(i in 1:nrow(LSOAs)){
  LSOAs$rural[i] <- rural$`Rural Urban Classification 2011 (2 fold)`[rural$`Lower Super Output Area 2011 Code` == LSOAs$`LSOA Code`[i]]
}

nrow(LSOAs[LSOAs$rural=='Urban',]) # 27246 LSOAs
nrow(LSOAs[LSOAs$rural=='Rural',]) # 5598 LSOAs
sum(LSOAs$`All Ages`[LSOAs$rural=='Urban']) # 46,866,824
sum(LSOAs$`All Ages`[LSOAs$rural=='Rural']) # 9,683,314

#attaching IMD deciles

IMDLSOA <- read.csv("/Users/lucy/Desktop/LSHTM/Summer Project/datasets/Lower_Super_Output_Area_(LSOA)_IMD_2019__(OSGB1936).csv")
# 2019 IMD classification of LSOAs
# from: https://data-communities.opendata.arcgis.com/datasets/d4b79be994ac4820ad44e10ded313df3_0/explore 
LSOAs$IMD_decile <- rep.int(NA,nrow(LSOAs))
for(i in 1:nrow(LSOAs)){
  LSOAs$IMD_decile[i] <- IMDLSOA$IMDDecil[IMDLSOA$lsoa11cd == LSOAs$`LSOA Code`[i]]
}

# Checking no NAs:
sum(is.na(LSOAs$rural)) # 0
sum(is.na(LSOAs$IMD_decile)) # 0

# Making data frame:
LSOAs$`All Ages` <- as.numeric(LSOAs$`All Ages`)
n <- 17*10*2
rural_age <- data.frame('Age'=rep(c("Under 1","1 to 4","5 to 9","10 to 14","15 to 19","20 to 24","25 to 29",
                                    "30 to 34","35 to 39","40 to 44","45 to 49","50 to 54","55 to 59","60 to 64","65 to 69",
                                    "70 to 74","75+"),n/17),
                        'IMD'=rep(rep(c(seq(1,10,1)),each=17),2),
                        'rural'=rep(c('Urban','Rural'),each=n/2),
                        'Population'=rep.int(NA,n),
                        'tot_pop'=rep.int(NA,n),
                        'Proportion'=rep.int(NA,n))

for(i in 1:nrow(rural_age)){
  rural_age$tot_pop[i] <- sum(LSOAs$`All Ages`[LSOAs$rural==rural_age$rural[i] &
                                                            LSOAs$IMD_decile==rural_age$IMD[i]])
}

for(j in 1:1){
  for(i in 1:(nrow(rural_age)/17)){
    rural_age$Population[17*(i-1) + j] <- sum(LSOAs[LSOAs$rural==rural_age$rural[17*(i-1) + j] &
                                                 LSOAs$IMD_decile==rural_age$IMD[17*(i-1) + j],
                                             8])
  }
}

for(j in 2:2){
  for(i in 1:(nrow(rural_age)/17)){
    rural_age$Population[17*(i-1) + j] <- sum(LSOAs[LSOAs$rural==rural_age$rural[17*(i-1) + j] &
                                                      LSOAs$IMD_decile==rural_age$IMD[17*(i-1) + j],
                                                    seq(5*j,5*j+3,1)-c(1,1,1,1)])
  }
}

for(j in 3:16){
  for(i in 1:(nrow(rural_age)/17)){
    rural_age$Population[17*(i-1) + j] <- sum(LSOAs[LSOAs$rural==rural_age$rural[17*(i-1) + j] &
                                                      LSOAs$IMD_decile==rural_age$IMD[17*(i-1) + j],
                                                    seq(5*j,5*j+4,1)-c(2,2,2,2,2)])
  }
}

for(j in 17:17){
  for(i in 1:(nrow(rural_age)/17)){
    rural_age$Population[17*(i-1) + j] <- sum(LSOAs[LSOAs$rural==rural_age$rural[17*(i-1) + j] &
                                                      LSOAs$IMD_decile==rural_age$IMD[17*(i-1) + j],
                                                    83:98])
  }
}

sum(rural_age$Population[rural_age$IMD==5 &rural_age$rural=='Rural'])
sum(rural_age$Population[rural_age$IMD==7 &rural_age$rural=='Urban']) #checking sums

rural_age$Proportion <- rural_age$Population/rural_age$tot_pop

rural_age$Age <- as.character(rural_age$Age)
rural_age$Age <- factor(rural_age$Age, levels=unique(rural_age$Age))

urban_graph <- ggplot(rural_age[rural_age$rural=='Urban',], aes(x=Age, y=Proportion, group=IMD, color=IMD)) +
  geom_line(lwd=0.8) + scale_y_continuous(limits=c(0,0.12),breaks=seq(0,0.12,0.02)) + 
  scale_color_distiller(palette = "RdPu",breaks=seq(1,10,1),
                        lab=c('Most deprived','2','3','4','5','6','7','8','9','Least deprived')) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(color = "IMD Decile") + 
  theme(plot.title = element_markdown(size = 18), axis.title.y = element_markdown()) +
  ylab("Proportion") + xlab("Age group") + 
  labs(title = "Urban age structure") +
  theme(panel.background = element_rect(fill = "white",color=NA),
        panel.grid = element_blank(),
        panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.07),
        panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.1),
        axis.ticks.length.y = unit(0, "mm"), 
        axis.ticks.length.x = unit(0, "mm"))

rural_graph <- ggplot(rural_age[rural_age$rural=='Rural',], aes(x=Age, y=Proportion, group=IMD, color=IMD)) +
  geom_line(lwd=0.8) + scale_y_continuous(limits=c(0,0.12),breaks=seq(0,0.12,0.02)) + 
  scale_color_distiller(palette = "RdPu",breaks=seq(1,10,1),
                        lab=c('Most deprived','2','3','4','5','6','7','8','9','Least deprived')) +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(color = "IMD Decile") + 
  labs(title = "Rural age structure") +
  theme(plot.title = element_markdown(size = 18), axis.title.y = element_markdown()) +
  ylab("Proportion") + xlab("Age group") + 
  theme(panel.background = element_rect(fill = "white",color=NA),
        panel.grid = element_blank(),
        panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.07),
        panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.1),
        axis.ticks.length.y = unit(0, "mm"), 
        axis.ticks.length.x = unit(0, "mm"))

#library(patchwork)

urban_graph + rural_graph + plot_layout(guides='collect')
# shows age distribution by IMD, in urban and rural areas

ggplot(rural_age[rural_age$IMD==4,], aes(x=Age, y=Proportion, group=interaction(rural,IMD), color=rural)) +
  geom_line(lwd=0.8) + scale_y_continuous(limits=c(0,0.12),breaks=seq(0,0.12,0.02)) + 
  theme(axis.text.x = element_text(angle = 90)) +
  theme(plot.title = element_markdown(size = 18), axis.title.y = element_markdown()) +
  ylab("Proportion") + xlab("Age group") + 
  theme(panel.background = element_rect(fill = "white",color=NA),
        panel.grid = element_blank(),
        panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.07),
        panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.1),
        axis.ticks.length.y = unit(0, "mm"), 
        axis.ticks.length.x = unit(0, "mm"))

write.csv(rural_age, "/Users/lucy/Desktop/LSHTM/Summer Project/MY DATASETS/age_distr.csv", row.names=F)

#___________________________________________________________________________________________________

# ** URBAN PROPORTION OF EACH IMD DECILE **

urban_IMD_distr <- data.frame('IMD' = seq(1,10,1),
                              'Urban_pop' = rep.int(NA,10),
                              'Rural_pop' = rep.int(NA,10))
for(i in 1:10){
  urban_IMD_distr$Urban_pop[i] <- sum(rural_age$Population[rural_age$rural=='Urban'
                                                            & rural_age$IMD==urban_IMD_distr$IMD[i]])
  urban_IMD_distr$Rural_pop[i] <- sum(rural_age$Population[rural_age$rural=='Rural'
                                                           & rural_age$IMD==urban_IMD_distr$IMD[i]])
}

urban_IMD_distr$tot_pop <- urban_IMD_distr$Urban_pop + urban_IMD_distr$Rural_pop
urban_IMD_distr$Urban_frac <- urban_IMD_distr$Urban_pop/(urban_IMD_distr$Urban_pop + urban_IMD_distr$Rural_pop)
urban_IMD_distr$Rural_frac <- urban_IMD_distr$Rural_pop/(urban_IMD_distr$Urban_pop + urban_IMD_distr$Rural_pop)

ggplot(urban_IMD_distr, aes(x=IMD,y=Urban_frac)) +
  geom_line() +
  labs(title = "Urban population proportion by IMD decile",
       subtitle = "(1 most deprived, 10 least deprived)") + 
  theme(plot.title = element_markdown(size = 18), axis.title.y = element_markdown()) +
  scale_x_continuous(breaks=seq(1,10,1)) + ylim(c(0,1)) + 
  ylab("Urban") + xlab("IMD") + 
  theme(panel.background = element_rect(fill = "white",color=NA),
        panel.grid = element_blank(),
        panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.07),
        panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.1),
        axis.ticks.length.y = unit(0, "mm"), 
        axis.ticks.length.x = unit(0, "mm"))

write.csv(urban_IMD_distr, "/Users/lucy/Desktop/LSHTM/Summer Project/MY DATASETS/urban_IMD_distr.csv", row.names=F)

urban_IMD_distr$Urban_pop[1]/sum(urban_IMD_distr$Urban_pop)
urban_IMD_distr$Rural_pop[1]/sum(urban_IMD_distr$Rural_pop)
sum(urban_IMD_distr$Rural_pop)/sum(urban_IMD_distr$tot_pop)
#________________________________________________________________________________________


# ** FINDING MEDIAN AGES PER RESIDENCE & IMD **

data <- data.frame(imd = rep(1:10,2),
                   urban = c(rep('Urban',10),rep('Rural',10)),
                   all_ages = rep.int(NA,20),
                   '0' = rep.int(NA,20))
data <- cbind(data, matrix(rep.int(NA,90),nrow=20,ncol=90))

for(i in 1:20){
  age <- LSOAs[LSOAs$IMD_decile==data$imd[i] & LSOAs$rural==data$urban[i],7:98]
  age_vec <- rep.int(NA,92)
  for(j in 1:92){
    age_vec[j] <- sum(as.numeric(unlist(age[,j])))
  }
  data[i,3:94] <- age_vec
}

data$median <- rep.int(NA,20)
for(i in 1:20){
  vector <- c(cumsum(unlist(data[i,4:94])) - rep.int(data[i,3]/2,91))
  k <- length(vector[vector < 0]) + 1
  data$median[i] <- k
}

ggplot(data, aes(x=imd, y=median, group=urban, col=urban)) + 
  geom_line() + theme_minimal() + scale_x_continuous(breaks=c(1:10)) +
  geom_point() + scale_color_brewer(palette='Set1') + ylim(c(30,55)) +
  ylab("Median age") + xlab("IMD") + labs(color='')  +
  theme(panel.background = element_rect(fill = "white",color=NA),
        panel.grid = element_blank(),
        panel.grid.major.x = element_line(color = "#A8BAC4", size = 0.07),
        panel.grid.major.y = element_line(color = "#A8BAC4", size = 0.1),
        axis.ticks.length.y = unit(0, "mm"), 
        axis.ticks.length.x = unit(0, "mm"))
